services:
  bot:
    build: .
    environment:
      - NODE_ENV=production
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - bot_network
    container_name: tg-saver-bot-prod

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - bot_network
    container_name: tg-saver-postgres-prod

networks:
  bot_network:
    name: tg-saver-network-prod
    driver: bridge

volumes:
  postgres_data_prod: 